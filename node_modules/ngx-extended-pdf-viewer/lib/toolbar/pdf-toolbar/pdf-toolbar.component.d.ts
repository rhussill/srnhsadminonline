import { AfterViewInit, ElementRef, EventEmitter, TemplateRef } from '@angular/core';
import { ResponsiveVisibility } from '../../responsive-visibility';
import * as i0 from "@angular/core";
export declare class PdfToolbarComponent implements AfterViewInit {
    private elementRef;
    customToolbar: TemplateRef<any> | undefined;
    mobileFriendlyZoomScale: number;
    primaryMenuVisible: boolean;
    showBookmarkButton: ResponsiveVisibility;
    showDownloadButton: ResponsiveVisibility;
    showDrawEditor: ResponsiveVisibility;
    showTextEditor: ResponsiveVisibility;
    showFindButton: ResponsiveVisibility | undefined;
    showHandToolButton: ResponsiveVisibility;
    showOpenFileButton: ResponsiveVisibility;
    showPrintButton: ResponsiveVisibility;
    showPagingButtons: ResponsiveVisibility;
    showPresentationModeButton: ResponsiveVisibility;
    showRotateButton: ResponsiveVisibility;
    showSecondaryToolbarButton: ResponsiveVisibility;
    showSidebarButton: ResponsiveVisibility;
    showZoomButtons: ResponsiveVisibility;
    textLayer: boolean | undefined;
    toolbarMarginTop: string;
    toolbarWidth: string;
    zoomLevels: (string | number)[];
    onToolbarLoaded: EventEmitter<HTMLElement>;
    constructor(elementRef: ElementRef);
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PdfToolbarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PdfToolbarComponent, "pdf-toolbar", never, { "customToolbar": "customToolbar"; "mobileFriendlyZoomScale": "mobileFriendlyZoomScale"; "primaryMenuVisible": "primaryMenuVisible"; "showBookmarkButton": "showBookmarkButton"; "showDownloadButton": "showDownloadButton"; "showDrawEditor": "showDrawEditor"; "showTextEditor": "showTextEditor"; "showFindButton": "showFindButton"; "showHandToolButton": "showHandToolButton"; "showOpenFileButton": "showOpenFileButton"; "showPrintButton": "showPrintButton"; "showPagingButtons": "showPagingButtons"; "showPresentationModeButton": "showPresentationModeButton"; "showRotateButton": "showRotateButton"; "showSecondaryToolbarButton": "showSecondaryToolbarButton"; "showSidebarButton": "showSidebarButton"; "showZoomButtons": "showZoomButtons"; "textLayer": "textLayer"; "toolbarMarginTop": "toolbarMarginTop"; "toolbarWidth": "toolbarWidth"; "zoomLevels": "zoomLevels"; }, { "onToolbarLoaded": "onToolbarLoaded"; }, never, ["*"]>;
}
